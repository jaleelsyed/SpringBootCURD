server.context-path=/
server.port=8086

#logging.level.root=WARN

#spring.datasource.url=jdbc:postgresql://localhost:5432/testDB
spring.datasource.url=jdbc:mysql://localhost:3306/sqltest?useSSL=false
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/sqltest
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.database-platform=org.hibernate.dialect.OracleDialect
#spring.jpa.database-platform=org.hibernate.dialect.DB2Dialect

#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
#spring.datasource.hikari.minimumIdle=20
#spring.datasource.hikari.maximumPoolSize=100
#spring.datasource.hikari.idleTimeout=30000


# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=src/main/resources/static/*
spring.thymeleaf.suffix=.html
       
 
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================

spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?